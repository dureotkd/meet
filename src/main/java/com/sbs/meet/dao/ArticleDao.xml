<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.sbs.meet.dao.ArticleDao">
	
	<insert id="doWriteArticle" useGeneratedKeys="true" keyProperty="id">
	INSERT INTO article
	SET regDate = NOW(),
	updateDate = NOW(),
	title = #{title},
	body = #{body},
	tag = #{tag},
	memberId = #{memberId},
	displayStatus = 1
	</insert>
	
	<select id="getForPrintPrison" resultType="Article">
	SELECT * FROM article
	WHERE nickname LIKE '%#{searchKeyword}%'
	</select>
	
	<select id="getForPrintArticles" resultMap="article">
	SELECT A.*,
	M.nickname  AS extra__writer
	FROM article AS A
	INNER JOIN member AS M
	ON A.memberId = M.id
	WHERE displayStatus = 1
	ORDER BY A.id DESC
	</select>
	
	
	<select id="getForPrintArticles2" resultMap="article">
	SELECT A.*,
	M.nickname  AS extra__writer
	FROM article AS A
	INNER JOIN member AS M
	ON A.memberId = M.id
	WHERE displayStatus = 1
	AND A.memberId = #{memberId}
	ORDER BY A.id ASC
	</select>
	
	<select id="getForPrintOneArticle" resultMap ="article">
	SELECT A.*,
	M.nickname AS extra__writer,
	IFNULL(SUM(AL.point), 0) AS extra__likePoint
	FROM article AS A
	INNER JOIN member AS M
	ON A.memberId = M.id
	LEFT JOIN articleLike AS AL
	ON A.id = AL.articleId
	WHERE A.id = #{id}
	GROUP BY A.id
	</select>
	
	<select id="getForPrintOneUserImg" resultMap ="article">
	SELECT A.*,
	M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN member AS M
	ON A.memberId = M.id
	WHERE A.memberId = #{memberId}
	AND A.id = #{id}
	</select>
	
	<select id="getArticleInReplyCount" resultType="int">
	SELECT COUNT(*) AS
	cnt FROM articleReply
	WHERE articleId = #{id}
	</select>
	
	<select id="getForPrintArticleReplies" resultMap="articleReply">
	SELECT * FROM articleReply
	WHERE displayStatus = 1
	</select>
	
	<select id="getArticleReplyCount" resultType="int">
	SELECT COUNT(*) AS
	cnt FROM articleReply
	</select>
	
	<select id="getLikePointByMemberId" resultType="int">
	SELECT 
	IFNULL(SUM(AL.point), 0) AS point
	FROM articleLike AS AL
	WHERE AL.articleId = #{id}
	AND AL.memberId = #{loginedMemberId}
	</select>
	
	<insert id="likeArticle" parameterType="map">
	INSERT INTO articleLike
	SET regDate = NOW(),
	articleId = #{id},
	memberId = #{loginedMemberId},
	readStatus = 0,
	point = 1
	</insert>
	
	<select id="getArticleCount" resultType="int">
	SELECT COUNT(*) AS
	cnt FROM article
	WHERE memberId = #{memberId}
	AND displayStatus = 1
	</select>
	
	
	<select id="getLikePoint" resultType="int">
	SELECT 
	IFNULL(SUM(AL.point), 0) AS point
	FROM articleLike AS AL
	WHERE AL.articleId = #{id}
	</select>
	
	<select id="getArticleLikeAvailableCount" resultType="int">
	SELECT 
	IFNULL(SUM(AL.point), 0) AS point
	FROM articleLike AS AL
	WHERE AL.articleId = #{id}
	AND AL.memberId = #{loginedMemberId}
	</select>
	
	
	<resultMap type="ArticleReply" id="articleReply">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="articleId" column="articleId" />
		<id property="displayStatus" column="displayStatus" />
		<id property="body" column="body" />
		<id property="memberId" column="memberId"/>
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />
			
		</association>
	</resultMap>
	
	
	<resultMap type="Article" id="article">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="title" column="title" />
		<id property="tag" column="tag"></id>
		<id property="body" column="body" />
		<id property="memberId" column="memberId"/>
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />
			<id property="likePoint" column="extra__likePoint" />
			<id property="tag" column="extra__tag"></id>
		</association>
	</resultMap>
	
</mapper>