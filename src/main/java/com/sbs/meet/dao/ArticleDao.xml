<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.sbs.meet.dao.ArticleDao">

	<insert id="doWriteArticle" useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO article
		SET regDate = NOW(),
		updateDate = NOW(),
		title = #{title},
		body = #{body},
		tag = #{tag},
		memberId = #{memberId},
		displayStatus = 1
	</insert>

	<select id="getForPrintPrison" resultType="Article">
		SELECT * FROM article
		WHERE nickname LIKE '%#{searchKeyword}%'
	</select>

	<select id="getForPrintArticles" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON
		A.memberId = M.id
		WHERE displayStatus = 1
		ORDER BY A.id DESC
	</select>

	<select id="getForPrintArticlesInFollow" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON
		M.id = A.memberId
		INNER JOIN friend AS F
		ON F.followId = M.id
		WHERE
		F.followerId = #{loginedMemberId}
		AND A.displayStatus = 1
		ORDER BY A.id
		DESC
		LIMIT 10
	</select>


	<select id="getForPrintArticles2" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON
		A.memberId = M.id
		WHERE displayStatus = 1
		AND A.memberId = #{memberId}
		ORDER BY A.id DESC
	</select>

	<select id="getForPrintOneArticle" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer,
		IFNULL(SUM(AL.point), 0) AS
		extra__likePoint
		FROM article AS A
		INNER JOIN member AS M
		ON A.memberId =
		M.id
		LEFT JOIN articleLike AS AL
		ON A.id = AL.articleId
		WHERE A.id =
		#{id}
		GROUP BY A.id
	</select>

	<select id="getForPrintOneUserImg" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON
		A.memberId = M.id
		WHERE A.memberId = #{memberId}
		AND A.id = #{id}
	</select>

	<select id="getArticleInReplyCount" resultType="int">
		SELECT COUNT(*)
		AS
		cnt FROM articleReply
		WHERE articleId = #{id}
	</select>

	<select id="getForPrintArticleReplies" resultMap="articleReply">
		SELECT * FROM
		articleReply
		WHERE displayStatus = 1
	</select>

	<select id="getArticleReplyCount" resultType="int">
		SELECT COUNT(*) AS
		cnt FROM articleReply
	</select>

	<select id="getLikePointByMemberId" resultType="int">
		SELECT
		IFNULL(SUM(AL.point), 0) AS point
		FROM articleLike AS AL
		WHERE
		AL.articleId = #{id}
		AND AL.memberId = #{loginedMemberId}
	</select>
	
	<select id="getLikePointByMemberIdAndList" resultType="integer">
		SELECT
		IFNULL(SUM(AL.point), 0) AS point
		FROM articleLike AS AL
		WHERE
		AL.articleId = #{id}
		AND AL.memberId = #{loginedMemberId}
	</select>

	<insert id="likeArticle" parameterType="map">
		INSERT INTO articleLike
		SET regDate = NOW(),
		articleId = #{id},
		memberId = #{loginedMemberId},
		readStatus = 0,
		point = 1
	</insert>

	<select id="getArticleCount" resultType="int">
		SELECT COUNT(*) AS
		cnt
		FROM article
		WHERE memberId = #{memberId}
		AND displayStatus = 1
	</select>


	<select id="getLikePoint" resultType="int">
		SELECT
		IFNULL(SUM(AL.point), 0) AS point
		FROM articleLike AS AL
		WHERE
		AL.articleId = #{id}
	</select>

	<select id="getArticleLikeAvailableCount" resultType="int">
		SELECT
		IFNULL(SUM(AL.point), 0) AS point
		FROM articleLike AS AL
		WHERE
		AL.articleId = #{id}
		AND AL.memberId = #{loginedMemberId}
	</select>

	<select id="getForPrintArticleLikesByMyArticle"
		resultMap="articleLike">
		SELECT AL.*,
		M.nickname AS extra__writer
		FROM articleLike AS
		AL
		INNER JOIN
		article AS A
		ON AL.articleId = A.id
		INNER JOIN member AS M
		ON M.id =
		AL.memberId
		WHERE A.memberId = #{loginedMemberId}
		AND
		AL.readStatus = 0
		ORDER BY AL.id DESC
	</select>

	<select id="getLikeKing" resultMap="article">
		SELECT A.*,
		A.body AS
		extra__body
		FROM article AS A
		INNER JOIN
		articleLike AS AL
		ON A.id =
		AL.articleId
		WHERE A.displayStatus = 1
		ORDER BY AL.point DESC
		LIMIT 1;
	</select>

	<select id="getLikeKingLimitFive" resultMap="article">
		SELECT A.*,
		A.body AS
		extra__body
		FROM article AS A
		INNER JOIN
		articleLike AS AL
		ON A.id =
		AL.articleId
		WHERE A.displayStatus = 1
		ORDER BY AL.point DESC
		LIMIT 5;
	</select>

	<select id="getArticlesLikeCount" resultType="int">
		SELECT
		IFNULL(SUM(AL.point), 0) AS point
		FROM articleLike AS AL
		WHERE
		AL.articleId = #{id}
	</select>

	<update id="updateReadStatus">
		UPDATE articleLike
		SET readStatus = 1
		WHERE id = #{id}
	</update>

	<delete id="doDeleteReplyAjax">
		DELETE FROM articleReply
		WHERE id = #{id}
	</delete>

	<select id="getForPrintArticleByLikeKing" resultMap="article">
		SELECT A.*,
		A.body AS
		extra__body
		FROM article AS A
		INNER JOIN
		articleLike AS AL
		ON
		A.id =
		AL.articleId
		WHERE A.displayStatus = 1
		AND A.memberId =
		#{memberId}
		ORDER BY AL.point DESC
		LIMIT 1;
	</select>

	<delete id="doDeleteArticleAjax">
		DELETE a,f,ar,al FROM article a
		LEFT JOIN `file` f
		ON
		a.id = f.relId
		LEFT JOIN articleReply ar
		ON a.id = ar.articleId
		LEFT JOIN articleLike al
		ON a.id = al.articleId
		WHERE a.id = #{id}
		AND f.relTypeCode = 'article';
	</delete>
	
	<select id="getForPrintArticles3" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON
		A.memberId = M.id
		WHERE displayStatus = 1
		AND A.memberId = #{memberId}
		ORDER BY A.id DESC
		LIMIT 7
	</select>
	
	<delete id="cancleLikeAction">
	DELETE FROM articleLike
	WHERE articleId = #{id}
	AND memberId = #{loginedMemberId}
	</delete>



	<resultMap type="ArticleLike" id="articleLike">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="articleId" column="articleId" />
		<id property="memberId" column="memberId" />
		<id property="readStatus" column="readStatus"></id>
		<id property="point" column="point"></id>
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />
		</association>
	</resultMap>

	<resultMap type="ArticleReply" id="articleReply">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="articleId" column="articleId" />
		<id property="displayStatus" column="displayStatus" />
		<id property="body" column="body" />
		<id property="memberId" column="memberId" />
		<id property="readStatus" column="readStatus"></id>
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />

		</association>
	</resultMap>


	<resultMap type="Article" id="article">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="displayStatus" column="displayStatus"></id>
		<id property="title" column="title" />
		<id property="tag" column="tag"></id>
		<id property="body" column="body" />
		<id property="memberId" column="memberId" />
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />
			<id property="likePoint" column="extra__likePoint" />
			<id property="tag" column="extra__tag"></id>
		</association>
	</resultMap>

</mapper>